{"version":3,"sources":["App.jsx","reportWebVitals.js","resource/grip.svg","resource/tail-spin.svg","singlePageApp/Header.jsx","singlePageApp/EndpointSelection.jsx","singlePageApp/SearchForm.jsx","singlePageApp/SearchResults.jsx","singlePageApp/images/grip.svg","singlePageApp/AttributeValue.jsx","singlePageApp/Attribute.jsx","singlePageApp/ResourceTable.jsx","singlePageApp/ResourcePreview.jsx","singlePageApp/images/tail-spin.svg","singlePageApp/SinglePage.jsx","index.jsx"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","Navbar","variant","id","Brand","href","Nav","className","Link","Form","inline","Label","Control","as","size","value","language","onChange","event","setLanguage","target","sessionStorage","setItem","EndpointSelection","useState","endpointUrl","inputEndpointUrl","setInputEndpointUrl","message","elementId","show","setMessage","showMessage","timeToShowInMill","setTimeout","onSubmit","preventDefault","alert","setEndpointUrl","getEndpointTypes","InputGroup","type","name","placeholder","Append","Button","SearchForm","isLoading","setIsLoading","search","setSearch","searchType","setSearchType","suggestions","setSuggestions","request","setRequest","radioProps","string","a","setResourcesList","axiosSource","axios","CancelToken","source","get","resourceType","cancelToken","token","response","console","log","data","catch","error","radioChangeHandler","undefined","getResource","suggestList","map","el","i","onClick","resource","label","Container","fluid","Row","style","marginRight","textAlign","Check","checked","Col","md","span","offset","sm","Dropdown","float","Toggle","Menu","CustomMenu","endpointTypes","Item","setResourceType","endpointLoading","Spinner","animation","role","xs","autoComplete","autoFocus","cancel","length","autocompleteSearch","React","forwardRef","ref","children","labeledBy","setValue","aria-labelledby","FormControl","e","Children","toArray","filter","child","toLowerCase","includes","SearchResults","resourcesList","comment","AttributeValue","valueString","setValueString","datatype","editing","newValue","Text","muted","custom","comparison","changeValue","ID","disabled","edited","Attribute","showChangeHandler","attribute","isConstraint","modifiedValues","changeAttribute","valueID","aux","indexOfProp","findIndex","draggableId","index","provided","snapshot","draggableProps","innerRef","backgroundColor","isDragging","dragHandleProps","src","grip","alt","property","uri","ResourceTable","attributeID","newAttribute","setResource","onDragEnd","result","destination","droppableId","droppedElement","splice","Table","striped","bordered","hover","droppableProps","ResourcePreview","attributes","fontWeight","values","SinglePage","getItem","setEndpointTypes","setEndpointLoading","resourceLabel","setResourceLabel","resourceComment","setResourceComment","queryResult","setQueryResult","selectedTab","setSelectedTab","rdfType","post","endpoint","resourceCopy","constraints","window","scrollTo","requestedResource","useEffect","sessionLanguage","sessionEndpoint","loadingImage","Tabs","activeKey","onSelect","tab","Tab","eventKey","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9208f9c3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction App() {\r\n\treturn \"HELLO WORD\";\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/grip.8b88c833.svg\";","export default __webpack_public_path__ + \"static/media/tail-spin.8e71e38f.svg\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\"; //Navbar\r\nimport Nav from \"react-bootstrap/Nav\"; //Nav\r\nimport Form from \"react-bootstrap/Form\"; //Form\r\n\r\nexport default function Header(props) {\r\n\t// Funzione che viene chiamata quando l'utente cambia lingua.\r\n\tfunction changeHandler(event) {\r\n\t\t// Viene memorizzata la lingua nel SessionStorage\r\n\t\tprops.setLanguage(event.target.value);\r\n\t\tsessionStorage.setItem(\"language\", event.target.value);\r\n\t}\r\n\treturn (\r\n\t\t<Navbar variant=\"dark\" id=\"navbar\">\r\n\t\t\t<Navbar.Brand href=\"#home\">Swipe</Navbar.Brand>\r\n\r\n\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t<Nav.Link id=\"current-page\">Home</Nav.Link>\r\n\t\t\t\t<Nav.Link href=\"/about\">About</Nav.Link>\r\n\t\t\t</Nav>\r\n\r\n\t\t\t<Form inline id=\"language-select\">\r\n\t\t\t\t<Form.Label>Results' language: </Form.Label>\r\n\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tid=\"languages\"\r\n\t\t\t\t\tvalue={props.language}\r\n\t\t\t\t\tonChange={changeHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"it\">Italian</option>\r\n\t\t\t\t\t<option value=\"en\">English</option>\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</Form>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\"; //Form\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nexport default function EndpointSelection(props) {\r\n\t// Stato che contiene l'endpoint inserito dall'utente\r\n\tconst [inputEndpointUrl, setInputEndpointUrl] = useState(props.endpointUrl);\r\n\t// Stato che contiene il messaggio da mostrare all'utente a seguito di una modifica dell'endpoint\r\n\tconst [message, setMessage] = useState({\r\n\t\tmessage: \"\",\r\n\t\telementId: \"\",\r\n\t\tshow: false,\r\n\t});\r\n\t// Funzione che mostra un messaggio come feedback all'utente per indicare sa la modifica fatta è valida o meno\r\n\tfunction showMessage(message, elementId, timeToShowInMill) {\r\n\t\tsetMessage({ message: message, elementId: elementId, show: true });\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetMessage({ message: \"\", elementId: \"\", show: false });\r\n\t\t}, timeToShowInMill);\r\n\t}\r\n\r\n\t// Funzione che permette di modificare l'endpoint da cui eseguire la ricerca\r\n\tfunction changeEndpoint(event) {\r\n\t\tsetInputEndpointUrl(event.target.value);\r\n\t}\r\n\t// Fuznione che applica la modifica dell'endpoint\r\n\tfunction applyEndpointChange(event) {\r\n\t\t// Previene il comportamento di default del submit\r\n\t\tevent.preventDefault();\r\n\t\t// Se l'endpoint inserito dall'utente è vuoto viene ripristinato l'endpoint precedente e viene mostrato un alert e un messaggio.\r\n\t\tif (inputEndpointUrl === \"\") {\r\n\t\t\talert(\"Non puoi lasciare questo campo vuoto!\");\r\n\t\t\tsetInputEndpointUrl(props.endpointUrl);\r\n\t\t\tshowMessage(\"Previous endpoint restored.\", \"reset-msg\", 5000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Se l'endpoint inserito dall'utente è diverso dall'ultimo endpoint inserito TODO: continuare\r\n\t\tif (inputEndpointUrl !== props.endpointUrl) {\r\n\t\t\tprops.setEndpointUrl(inputEndpointUrl);\r\n\t\t\tshowMessage(\"Enpoint modified successfully!\", \"success-msg\", 5000);\r\n\t\t\tprops.getEndpointTypes(inputEndpointUrl);\r\n\t\t\tsessionStorage.setItem(\"endpoint\", inputEndpointUrl);\r\n\t\t} else {\r\n\t\t\t// Se l'endpoint è uguale al precedente viene mostrato un messaggio di errore.\r\n\t\t\tshowMessage(\r\n\t\t\t\t\"The endpoint you insert is the same of the previous\",\r\n\t\t\t\t\"error-msg\",\r\n\t\t\t\t5000\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={applyEndpointChange} inline>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Form.Label>Endpoint URL:</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"endpoint\"\r\n\t\t\t\t\tplaceholder=\"Enter endpoint url\"\r\n\t\t\t\t\tvalue={inputEndpointUrl}\r\n\t\t\t\t\tonChange={changeEndpoint}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"primary-btn\"\r\n\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tApply\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</InputGroup.Append>\r\n\t\t\t</InputGroup>\r\n\t\t\t{message.show && <p id={message.elementId}>{message.message}</p>}\r\n\t\t</Form>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\"; //Form\r\nimport FormControl from \"react-bootstrap/FormControl\"; //FormControl\r\nimport Row from \"react-bootstrap/Row\"; //Row\r\nimport Col from \"react-bootstrap/Col\"; //Col\r\nimport Dropdown from \"react-bootstrap/Dropdown\"; //Dropdown\r\nimport InputGroup from \"react-bootstrap/InputGroup\"; //InputGroup\r\nimport Button from \"react-bootstrap/Button\"; //Button\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport default function SearchForm(props) {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [search, setSearch] = useState(\"\");\r\n\r\n\tconst [searchType, setSearchType] = useState(\"rdfs:label\");\r\n\tconst [suggestions, setSuggestions] = useState([]);\r\n\t/* Stato utilizzato per salvare il cancelToken della richiesta (per l'autocompletamento della ricerca) precedente\r\n\t ** così da poterla cancellare quando se ne invia un altra */\r\n\tconst [request, setRequest] = useState();\r\n\r\n\tconst radioProps = { inline: true, name: \"searchType\", type: \"radio\" };\r\n\r\n\tfunction changeResourceType(type) {\r\n\t\tprops.setResourceType(type);\r\n\t}\r\n\r\n\t// Funzione chiamata quando l'utente modifica il valore dell'input per la ricerca\r\n\tfunction changeHandler(event) {\r\n\t\t// Se esiste una richiesta precedente ancora in elaborazione viene cancellata.\r\n\t\tif (request) {\r\n\t\t\tconsole.log(\"CANCELLATO\"); //!DEBUG\r\n\t\t\trequest.cancel(\"axios request cancelled\");\r\n\t\t\tsetRequest(null);\r\n\t\t}\r\n\t\tconst string = event.target.value;\r\n\t\t// Viene impostato il valore dello stato contenente la stringa inserita dall'utente il nuovo valore\r\n\t\tsetSearch(string);\r\n\t\t/* Se la stringa inserita dall'utente è vuota vengono cancellati i suggerimenti precedenti, altrimenti\r\n\t\t ** viene chiamata la funzione che si occupa della richiesta al server per l'autocompletamento della ricerca */\r\n\t\tif (string.length === 0) {\r\n\t\t\tsetSuggestions(null);\r\n\t\t\tsetIsLoading(false);\r\n\t\t} else {\r\n\t\t\tif (searchType !== \"URI\") autocompleteSearch(event.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\t// Funzione che si occupa della richiesta al server per l'autocompletamento\r\n\tasync function autocompleteSearch(string) {\r\n\t\tprops.setResourcesList([]);\r\n\t\tsetIsLoading(true);\r\n\t\t// Viene generato un cancelToken\r\n\t\tconst axiosSource = axios.CancelToken.source();\r\n\t\t// Viene memorizzato nello stato apposito\r\n\t\tsetRequest(axiosSource);\r\n\t\t// Richiesta al server, a cui viene passato anche il cancelToken\r\n\t\tawait axios\r\n\t\t\t.get(\r\n\t\t\t\t`/autocomplete_search?query=${string}&language=${\r\n\t\t\t\t\tprops.language\r\n\t\t\t\t}&endpoint=${props.endpointUrl}&resourceType=${\r\n\t\t\t\t\tprops.resourceType ? props.resourceType.type.value : \"\"\r\n\t\t\t\t}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tcancelToken: axiosSource.token,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\t// Quando arriva la risposta vengono salvati i suggerimenti nello stato\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\tsetSuggestions(response.data);\r\n\t\t\t\t// Viene cancellata la richiesta dallo stato in quanto è stata completata\r\n\t\t\t\tsetRequest(null);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.message === \"axios request cancelled\") {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"Nuova richiesta ricevuta, questa viene cancellata.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"Errore nell'autocompletamento della ricerca\",\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\tconst radioChangeHandler = (event) => {\r\n\t\tsetSearchType(event.target.value);\r\n\t};\r\n\r\n\tasync function submitSearchHandler(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif (searchType === \"rdfs:label\") {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tsetSuggestions([]);\r\n\t\t\t// Viene generato un cancelToken\r\n\t\t\tconst axiosSource = axios.CancelToken.source();\r\n\t\t\t// Viene memorizzato nello stato apposito\r\n\t\t\tsetRequest(axiosSource);\r\n\t\t\t// Richiesta al server, a cui viene passato anche il cancelToken\r\n\t\t\tawait axios\r\n\t\t\t\t.get(\r\n\t\t\t\t\t`/search_by_label?query=${search}&language=${\r\n\t\t\t\t\t\tprops.language\r\n\t\t\t\t\t}&endpoint=${props.endpointUrl}&resourceType=${\r\n\t\t\t\t\t\tprops.resourceType ? props.resourceType.type.value : \"\"\r\n\t\t\t\t\t}`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcancelToken: axiosSource.token,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t\tprops.setResourcesList(response.data);\r\n\r\n\t\t\t\t\tif (response.data === []) {\r\n\t\t\t\t\t\talert(\"Risorsa con il label inserito non trovata.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetSuggestions(undefined);\r\n\t\t\t\t\t// Viene cancellata la richiesta dallo stato in quanto è stata completata\r\n\t\t\t\t\tsetRequest(null);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tif (error.message === \"axios request cancelled\") {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\"Nuova richiesta ricevuta, questa viene cancellata.\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\"Errore nell'autocompletamento della ricerca\",\r\n\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tprops.getResource(search);\r\n\t\t}\r\n\t}\r\n\r\n\t// Variabile che conterrà la lista non ordinata dei suggerimenti (solo se non sarà vuota)\r\n\tconst suggestList = suggestions && (\r\n\t\t<ul id=\"autocomplete-ul\">\r\n\t\t\t{suggestions.map((el, i) => (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"autocomplete-li\"\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tonClick={() => props.getResource(el.resource.value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{el.label.value}\r\n\t\t\t\t\t\t<span>{el.resource.value}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className=\"justify-content-center mb-2\">\r\n\t\t\t\t<span style={{ marginRight: \"1em\", textAlign: \"center\" }}>\r\n\t\t\t\t\tSearch for:\r\n\t\t\t\t</span>\r\n\t\t\t\t<Form.Check\r\n\t\t\t\t\tlabel=\"Label\"\r\n\t\t\t\t\tvalue=\"rdfs:label\"\r\n\t\t\t\t\tchecked={searchType === \"rdfs:label\"}\r\n\t\t\t\t\tid=\"inline-radio-1\"\r\n\t\t\t\t\tonChange={radioChangeHandler}\r\n\t\t\t\t\t{...radioProps}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Check\r\n\t\t\t\t\tlabel=\"URI\"\r\n\t\t\t\t\tvalue=\"URI\"\r\n\t\t\t\t\tchecked={searchType === \"URI\"}\r\n\t\t\t\t\tid=\"inline-radio-2\"\r\n\t\t\t\t\tonChange={radioChangeHandler}\r\n\t\t\t\t\t{...radioProps}\r\n\t\t\t\t/>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={{ span: 2, offset: 2 }} sm={12}>\r\n\t\t\t\t\t<Dropdown style={{ float: \" left \" }}>\r\n\t\t\t\t\t\t<Dropdown.Toggle id=\"dropdown-custom-components\">\r\n\t\t\t\t\t\t\t{props.resourceType === undefined\r\n\t\t\t\t\t\t\t\t? \"Any type of resource\"\r\n\t\t\t\t\t\t\t\t: props.resourceType.label\r\n\t\t\t\t\t\t\t\t? props.resourceType.label.value\r\n\t\t\t\t\t\t\t\t: props.resourceType.type.value}\r\n\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\r\n\t\t\t\t\t\t\t{props.endpointTypes?.map((el, i) => (\r\n\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tchangeResourceType(el);\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(el);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{el.label ? el.label.value : el.type.value}\r\n\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t{props.endpointLoading && (\r\n\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\">\r\n\t\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{props.resourceType !== undefined && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid=\"reset-type-btn\"\r\n\t\t\t\t\t\t\tvariant=\"outline-danger\"\r\n\t\t\t\t\t\t\tonClick={() => props.setResourceType(undefined)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col md={{ span: 4 }} xs={12}>\r\n\t\t\t\t\t<Form onSubmit={submitSearchHandler}>\r\n\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Type your search\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tonChange={changeHandler}\r\n\t\t\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"primary-btn\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t{suggestList}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t{isLoading && (\r\n\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\">\r\n\t\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst CustomMenu = React.forwardRef(\r\n\t({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n\t\tconst [value, setValue] = useState(\"\");\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ref}\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tclassName={className}\r\n\t\t\t\taria-labelledby={labeledBy}\r\n\t\t\t>\r\n\t\t\t\t<FormControl\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tclassName=\"mx-3 my-2 w-auto\"\r\n\t\t\t\t\tplaceholder=\"Type to filter...\"\r\n\t\t\t\t\tonChange={(e) => setValue(e.target.value)}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t/>\r\n\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t{React.Children.toArray(children).filter(\r\n\t\t\t\t\t\t(child) =>\r\n\t\t\t\t\t\t\t!value ||\r\n\t\t\t\t\t\t\tchild.props.children.toLowerCase().includes(value)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\"; //Container\r\n\r\nexport default function SearchResults(props) {\r\n\t//el.resource.value URI della risorsa\r\n\treturn (\r\n\t\t<Container id=\"results-container\">\r\n\t\t\t<h3>{props.resourcesList.length} Resources:</h3>\r\n\t\t\t{props.resourcesList.map((el) => (\r\n\t\t\t\t<Container\r\n\t\t\t\t\tclassName=\"results\"\r\n\t\t\t\t\tonClick={() => props.getResource(el.resource.value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p className=\"result-title\">{el.label.value}</p>\r\n\t\t\t\t\t<p className=\"result-url\">URI: {el.resource.value}</p>\r\n\t\t\t\t\t<p className=\"result-comment\">\r\n\t\t\t\t\t\t{el.comment.value ||\r\n\t\t\t\t\t\t\t\"No comment avaiable for this resource\"}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Container>\r\n\t\t\t))}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/grip.8b88c833.svg\";","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function AttributeValue(props) {\r\n\t// Stato che contiene il label o il value del valore.\r\n\tconst [valueString, setValueString] = useState(\r\n\t\tprops.value.label || props.value.value\r\n\t);\r\n\t// Costante che contiene l'rdf:type del valore, attraverso la funzione getType()\r\n\tconst type = getType();\r\n\t// Funzione che restituisce l'rdf:type di un valore\r\n\tfunction getType() {\r\n\t\t/**  Se il valore ha un label viene restituito come tipo \"literal\"\r\n\t\t *    altrimenti viene restituito come tipo il datatype se presente, se non presente viene restituito il type */\r\n\t\tif (props.value.label === null) {\r\n\t\t\tif (props.value.datatype === null) {\r\n\t\t\t\treturn props.value.type;\r\n\t\t\t} else {\r\n\t\t\t\treturn props.value.datatype;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn \"literal\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Funzione che si occupa della modifica del valore da parte dell'utente\r\n\tfunction changeValueHandler(event) {\r\n\t\tconst newValue = event.target.value;\r\n\t\tsetValueString(newValue);\r\n\t}\r\n\t// Funzione che resituisce i possibili confronti in base al tipo del valore\r\n\tfunction possibleComparison() {\r\n\t\t// Se il tipo è literal è possibile effettuare un contronto su stringa esatta o su substring\r\n\t\tif (type === \"literal\") {\r\n\t\t\treturn [\r\n\t\t\t\t<option key=\"exact-string\" value=\"exact-string\">\r\n\t\t\t\t\tExact String\r\n\t\t\t\t</option>,\r\n\t\t\t\t<option key=\"substring\" value=\"substring\">\r\n\t\t\t\t\tSubstring\r\n\t\t\t\t</option>,\r\n\t\t\t];\r\n\t\t}\r\n\t\t// Se il tipo è uri è possibile effettuare solo il confronto uri\r\n\t\tif (type === \"uri\") {\r\n\t\t\treturn [\r\n\t\t\t\t<option key=\"uri\" value=\"uri\">\r\n\t\t\t\t\tURI\r\n\t\t\t\t</option>,\r\n\t\t\t];\r\n\t\t}\r\n\t\t/**  Per qualsiasi altro tipo è possibile fare un confronto basato sul tipo del valore, che verra gestito in backend\r\n\t\t *\tIn futuro si potrebbe implementare la funzione regex*/\r\n\t\treturn [\r\n\t\t\t<option key=\"type-based\" value=\"type-based\">\r\n\t\t\t\tType based comparison (default equal)\r\n\t\t\t</option>,\r\n\t\t\t<option disabled key=\"regex\" value=\"regex\">\r\n\t\t\t\tRegex\r\n\t\t\t</option>,\r\n\t\t];\r\n\t}\r\n\r\n\t// Funzione che rende modificabile il valore dell'attributo scelto dall'utente\r\n\tfunction editButtonHandler() {\r\n\t\t// Viene modificato il valore all'interno dell'oggetto che indica se si sta modificando il valore\r\n\t\tprops.value.editing = true;\r\n\t\t// Viene utilizzata la funzione del parent che permette di applicare le modifiche\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t\tconsole.log(props.value); //!Log di debug\r\n\t}\r\n\t// Funzione che si occupa della modifica del tipo di confronto del valore scelto dall'utente\r\n\tfunction changeComparison(event) {\r\n\t\tprops.value.comparison = event.target.value;\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t}\r\n\t// Funzione che applica le modifiche effettuate al valore (dopo aver premuto Apply)\r\n\tfunction applyEdit() {\r\n\t\t// Controllo sulla lunghezza della stringa inserita dall'utente, non può essere lasciato vuoto e viene mostrato un alert se questo avviene\r\n\t\tif (valueString.length === 0) {\r\n\t\t\talert(\"non può essere vuoto\");\r\n\t\t} else {\r\n\t\t\t// Se la modifica effettuata è valida viene posto a true il booleano che indica che il valore è stato modificato\r\n\t\t\tprops.value.edited = true;\r\n\t\t\t// Viene posto a false il booleano che indica che il valore sia in fase di modifica\r\n\t\t\tprops.value.editing = false;\r\n\t\t\t// Viene modificato il valore con il valore inserito dall'utente\r\n\t\t\tif (props.value.label !== null) {\r\n\t\t\t\tprops.value.label = valueString;\r\n\t\t\t} else {\r\n\t\t\t\tprops.value.value = valueString;\r\n\t\t\t}\r\n\t\t\t// Viene applicata la modifica all'attributo contenente il valore e viene passato true in quando è un vincolo\r\n\t\t\tprops.changeValue(props.value.ID, props.value, true);\r\n\t\t}\r\n\t}\r\n\t// Funzione che annulla la modifica che si stava effettuando\r\n\tfunction undoEdit() {\r\n\t\tprops.value.editing = false;\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t}\r\n\t// Funzione che rimuove un vincolo precedentemente imposto\r\n\tfunction removeConstraint() {\r\n\t\tprops.value.edited = false;\r\n\t\tprops.changeValue(props.value.ID, props.value, false);\r\n\t}\r\n\t/* Se l'utente sta modificando il valore viene mostrato un form che permette la modifica e la selezione del tipo\r\n\t   di confronto che vuole effettuare per la nuova query */\r\n\treturn props.value.editing ? (\r\n\t\t<li>\r\n\t\t\t<Container fluid className=\"value-container\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"propertyValue\"\r\n\t\t\t\t\t\t\tclassName=\"value\"\r\n\t\t\t\t\t\t\tvalue={valueString}\r\n\t\t\t\t\t\t\tonChange={changeValueHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Form.Text muted>\r\n\t\t\t\t\t\t\tThis value is type: \"{type}\"\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form inline>\r\n\t\t\t\t\t\t\t<Form.Label className=\"my-1 mr-sm-2 float-sx\">\r\n\t\t\t\t\t\t\t\tChoose the type of comparison:\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tclassName=\"my-1 mr-sm-2 float-dx\"\r\n\t\t\t\t\t\t\t\tid=\"inlineFormCustomSelectPref\"\r\n\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\tvalue={props.value.comparison}\r\n\t\t\t\t\t\t\t\tonChange={changeComparison}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{possibleComparison()}\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"btn-span\" md=\"auto\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"applica\"\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tonClick={applyEdit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tApplica\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t|\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"annulla\"\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tonClick={undoEdit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAnnulla\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</li>\r\n\t) : (\r\n\t\t<li className={props.value.edited ? \"modified\" : \"non-modified\"}>\r\n\t\t\t{props.value.label ? props.value.label : props.value.value}\r\n\t\t\t<span className=\"editButtonSpan\">\r\n\t\t\t\t[\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\tid=\"modifica\"\r\n\t\t\t\t\tonClick={editButtonHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</button>\r\n\t\t\t\t]\r\n\t\t\t</span>\r\n\t\t\t{props.value.edited && (\r\n\t\t\t\t<span className=\"editButtonSpan\">\r\n\t\t\t\t\t[\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid=\"annulla\"\r\n\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\tonClick={removeConstraint}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRemove\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t]\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</li>\r\n\t);\r\n}\r\n/**\r\n * \r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<span id=\"editButtonSpan\">[ Apply | Undo]</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<option value=\"default\">\r\n\t\t\t\t\t\t\t\t\tDefault (exactString or equal)\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"substring\">Substring</option>\r\n\t\t\t\t\t\t\t\t<option value=\"numeric\">Numeric</option>\r\n\t\t\t\t\t\t\t\t<option value=\"regex\">\r\n\t\t\t\t\t\t\t\t\tRegular Expression\r\n\t\t\t\t\t\t\t\t</option>\r\n*/\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport grip from \"./images/grip.svg\";\r\n\r\nimport AttributeValue from \"./AttributeValue\";\r\n\r\nexport default function Attribute(props) {\r\n\tfunction showChangeHandler() {\r\n\t\tprops.attribute.show = !props.attribute.show;\r\n\t\t/*Se l'utente vuole che un'attributo venga mostrato nella pagina dei risultati e questo non è già un vincolo viene impostato il booleano\r\n\t\t * che lo identifica come vincolo */\r\n\t\tif (props.attribute.show && !props.attribute.isConstraint) {\r\n\t\t\tprops.attribute.isConstraint = true;\r\n\t\t} else {\r\n\t\t\t/*Se l'utente toglie il check all'attributo per non effettuarne lo show, e l'attributo non contiene valori modificati\r\n\t\t\t *viene impostato a falso il booleano che lo identifica come vincolo */\r\n\t\t\tif (!props.attribute.show && props.attribute.isConstraint) {\r\n\t\t\t\tconst modifiedValues = props.attribute.value.filter(\r\n\t\t\t\t\t(value) => value.edited\r\n\t\t\t\t);\r\n\t\t\t\tprops.attribute.isConstraint = modifiedValues.length > 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Viene applicata la modifica all'attributo\r\n\t\tprops.changeAttribute(props.attribute.ID, props.attribute);\r\n\t}\r\n\r\n\t/* Funzione che permette la modifica di un valore dell'attributo attraverso la sostituzione dell'oggetto modificato\r\n\t   con il nuovo, nell'oggetto che contiene la risorsa \r\n\t   valueID è l'id del valore modificato, newValue è il valore con le modifiche effettuate, isCostraint indica se il valore modificato è o meno un vincolo\r\n\t   ad esempio se viene annullato l'inserimento di un vincolo precedente posto questo sarà false e permettera di non considerarlo come vincolo*/\r\n\tfunction changeValue(valueID, newValue, isConstraint) {\r\n\t\tconst aux = props.attribute;\r\n\t\t// Controllo per verificare,in caso l'utente rimuova un valore dai vincoli, se l'attributo è ancora vincolo o meno\r\n\t\tif (isConstraint !== undefined) {\r\n\t\t\tif (!isConstraint) {\r\n\t\t\t\tif (!aux.show) {\r\n\t\t\t\t\tconst modifiedValues = aux.value.filter(\r\n\t\t\t\t\t\t(value) => value.edited\r\n\t\t\t\t\t);\r\n\t\t\t\t\taux.isConstraint = modifiedValues.length > 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\taux.isConstraint = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\taux.isConstraint = isConstraint;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Viene cercato l'index del valore modificato attraverso l'id\r\n\t\tconst indexOfProp = aux.value.findIndex(\r\n\t\t\t(value) => value.ID === valueID\r\n\t\t);\r\n\t\t// Viene sostituito il vecchio valore con il nuovo\r\n\t\taux.value[indexOfProp] = newValue;\r\n\t\t// Viene applicata la modifica all'attributo a cui appartiene il valore\r\n\t\tprops.changeAttribute(props.attribute.ID, aux);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Draggable draggableId={props.attribute.ID} index={props.index}>\r\n\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t<tr\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: snapshot.isDragging && \"#abcdef\",\r\n\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"attribute-row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<td className=\"drag-cell\" {...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<img src={grip} alt=\"drag\" />\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"property-cell\">\r\n\t\t\t\t\t\t{props.attribute.property.label ||\r\n\t\t\t\t\t\t\tprops.attribute.property.uri}\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"value-cell\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{props.attribute.value.map((value) => (\r\n\t\t\t\t\t\t\t\t<AttributeValue\r\n\t\t\t\t\t\t\t\t\tkey={value.ID}\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\tchangeValue={changeValue}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"show-cell\">\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname={props.attribute.ID}\r\n\t\t\t\t\t\t\tchecked={props.attribute.show}\r\n\t\t\t\t\t\t\tonChange={showChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport Attribute from \"./Attribute\";\r\n\r\nexport default function ResourceTable(props) {\r\n\t// Viene modificato l'attributo con i nuovi valori\r\n\tfunction changeAttribute(attributeID, newAttribute) {\r\n\t\tconst aux = [...props.resource];\r\n\t\tconst indexOfProp = aux.findIndex(\r\n\t\t\t(attribute) => attribute.ID === attributeID\r\n\t\t);\r\n\t\taux[indexOfProp] = newAttribute;\r\n\t\tprops.setResource(aux);\r\n\t}\r\n\r\n\tfunction onDragEnd(result) {\r\n\t\tconst { destination, source } = result;\r\n\t\t// Se destination è null, ovvero se l'utente trascina la riga dove non può essere spostata non viene effettuata nessuna modifca\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Se non avviene effettivamente nessuno spostamento, ovvero viene spostata nella posizione di partenza non avviene nessuna modifica\r\n\t\tif (\r\n\t\t\tdestination.droppableId === source.droppableId &&\r\n\t\t\tdestination.index === source.index\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Viene rimosso l'elemento trascinato in nuova posizione dall'utente e salvato nella vaiabile droppedElement\r\n\t\tlet droppedElement = props.resource.splice(source.index, 1)[0];\r\n\t\t// Viene inserito l'elemento nella nuova posizione\r\n\t\tprops.resource.splice(destination.index, 0, droppedElement);\r\n\t\tconsole.log(droppedElement, destination.index);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t<Table striped bordered hover id=\"resource-table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th className=\"drag-cell\">#</th>\r\n\t\t\t\t\t\t<th className=\"property-cell\">Property</th>\r\n\t\t\t\t\t\t<th className=\"value-cell\">Values</th>\r\n\t\t\t\t\t\t<th className=\"show-cell\">Show</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t{\r\n\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t\t<tbody\r\n\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{props.resource?.map((attribute, index) => (\r\n\t\t\t\t\t\t\t\t\t<Attribute\r\n\t\t\t\t\t\t\t\t\t\tkey={attribute.ID}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tchangeAttribute={changeAttribute}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t}\r\n\t\t\t</Table>\r\n\t\t</DragDropContext>\r\n\t);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function ResourcePreview({ resource, getResource }) {\r\n\t// Funzione che al click di un'anteprima chiama la funzione che esegue la richiesta al server della nuova risorsa\r\n\tfunction redirectToResource() {\r\n\t\tgetResource(resource.uri);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"resource-preview\" onClick={redirectToResource}>\r\n\t\t\t<p className=\"result-title\">{resource.label}</p>\r\n\t\t\t<p className=\"result-url\">URI: {resource.uri}</p>\r\n\t\t\t<p className=\"result-comment\">\r\n\t\t\t\t{resource.comment || \"No comment avaiable for this resource\"}\r\n\t\t\t</p>\r\n\t\t\t{resource.attributes?.map((attribute) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<span style={{ fontWeight: \"500\" }}>\r\n\t\t\t\t\t\t{attribute.attribute} :\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{attribute.values.map((value) => (\r\n\t\t\t\t\t\t\t<li>{value}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</>\r\n\t\t\t))}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/tail-spin.8e71e38f.svg\";","import React, { useState, useEffect } from \"react\";\r\n// Import axios, libreria per effettuare le richieste Get e Post al server.\r\nimport axios from \"axios\";\r\n// Import del file per lo style Sass\r\nimport \"./style/SinglePageStyle.scss\";\r\n// Import dei component di react-bootstrap utilizzati\r\nimport Container from \"react-bootstrap/Container\"; //Container\r\nimport Row from \"react-bootstrap/Row\"; //Row\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\n// Import dei component che compongono la pagina\r\nimport Header from \"./Header\";\r\nimport EndpointSelection from \"./EndpointSelection\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport ResourceTable from \"./ResourceTable\";\r\nimport ResourcePreview from \"./ResourcePreview\";\r\n// Import dello spinner che viene mostrato quando si attende una risposta dal server\r\nimport loadingImage from \"./images/tail-spin.svg\";\r\n\r\nexport default function SinglePage() {\r\n\t// Stato che conterrà il lingua scelta dall'utente per i risultati\r\n\tconst [language, setLanguage] = useState(\r\n\t\tsessionStorage.getItem(\"language\") || \"it\"\r\n\t);\r\n\t// Stato in cui viene memorizzato l'endpoint scelto dall'utente, di default viene utilizzato quello di dbpedia\r\n\tconst [endpointUrl, setEndpointUrl] = useState(\r\n\t\tsessionStorage.getItem(\"endpoint\") || \"http://dbpedia.org/sparql\"\r\n\t);\r\n\t// Stato che conterrà gli rdf:type delle risorse presenti nell'endpoint inserito dall'utente\r\n\tconst [endpointTypes, setEndpointTypes] = useState(undefined);\r\n\t/*Stato che indica se, a seguito di un cambio di endpoint da parte dell'utente, si sta attendendo la lista\r\n\t * di rdf:type delle risorse presenti nel nuovo endpoint inserito, viene utilizzato per mostrare uno spinner di caricamento.*/\r\n\tconst [endpointLoading, setEndpointLoading] = useState(false);\r\n\t// Stato che contiene rdf type su cui si effettua la ricerca\r\n\tconst [resourceType, setResourceType] = useState(undefined);\r\n\t// Stato che contiene la lista di risorse che hanno il label inserito dall'utente a seguito di una ricerca tramite il tasto Search,\r\n\tconst [resourcesList, setResourcesList] = useState(undefined);\r\n\t// Stato che conterrà la risorsa cercata dall'utente\r\n\tconst [resource, setResource] = useState(undefined);\r\n\t// Stato che conterrà il label della risorsa cercata dall'utente\r\n\tconst [resourceLabel, setResourceLabel] = useState(undefined);\r\n\t// Stato che conterrà il commento della risorsa cercata dall'utente\r\n\tconst [resourceComment, setResourceComment] = useState(undefined);\r\n\t/*Stato che viene utilizzato per memorizzare il cancel token dell'ultima richiesta inviata dall'utente\r\n\t *Per poter cancellare la richiesta in caso ne venga fatta una nuova */\r\n\tconst [request, setRequest] = useState(undefined);\r\n\t// Stato che conterrò i risultati della query effettuata dall'utente\r\n\tconst [queryResult, setQueryResult] = useState(undefined);\r\n\t// Stato che contiene la tab selezionata dall'utente, di default viene mostrata la tab di ricerca\r\n\tconst [selectedTab, setSelectedTab] = useState(\"search\");\r\n\t// Stato utilizzato per mostrare uno spinner di caricamento in caso di attesa di una risposta dal server a seguito di una richiesta\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\t// Quando viene caricata la pagine vengono caricati i dati presenti nel sessionStorage in caso siano già stati salvati altrimenti vengono impostati i valori di default\r\n\tuseEffect(() => {\r\n\t\t// Get del valore presente nel session storage della lingua selezionata dall'utente in precedenza\r\n\t\tconst sessionLanguage = sessionStorage.getItem(\"language\");\r\n\t\t// Get del valore presente nel session storage del endpoint selezionato dall'utente in precedenza\r\n\t\tconst sessionEndpoint = sessionStorage.getItem(\"endpoint\");\r\n\t\t// Se è presente una lingua salvata nel session storage viene impostato lo stato contenente la lingua al valore salvato\r\n\t\tif (sessionLanguage) {\r\n\t\t\tsetLanguage(sessionLanguage);\r\n\t\t} else {\r\n\t\t\t// Se non è presente viene impostato con la lingua di default italiano\r\n\t\t\tsessionStorage.setItem(\"language\", \"it\");\r\n\t\t}\r\n\t\t// Se è presente un endpoint salvato nel session storage viene impostato lo stato contenente l'endpoint al valore salvato\r\n\t\tif (sessionEndpoint) {\r\n\t\t\tsetEndpointUrl(sessionEndpoint);\r\n\t\t} else {\r\n\t\t\t// Se non è presente viene impostato come endpoint di default l'endpoint di dbpedia\r\n\t\t\tsessionStorage.setItem(\"endpoint\", \"http://dbpedia.org/sparql\");\r\n\t\t}\r\n\t\tconsole.log(\"RICHIESTA!\"); //! STAMPA DI DEBUG\r\n\t\t// Viene eseguita la funzione che fa la richiesta degli rdf:type delle risorse presenti nell'endpoint selezionato\r\n\t\tgetEndpointTypes(sessionEndpoint || \"http://dbpedia.org/sparql\");\r\n\t\t// Viene posto a undefined il valore dello stato che contiene rdf type precedentemente selezionato\r\n\r\n\t\tsetResourceType(undefined);\r\n\t}, []);\r\n\t/* Funzione asincrona che tramite chiamata all'api ottiene gli rdf:type dell'endpoint inserito dall'utente e li salva nello stato.\r\n\t endpointUrl è l'endpoint su cui effettuare la query per trovare gli rdf:type delle risorse presenti nell'endpoint */\r\n\tasync function getEndpointTypes(endpointUrl) {\r\n\t\t// Viene posto a undefined lo stato che contiene gli rdf:type così da eliminare i precedenti salvati se presenti\r\n\t\tsetEndpointTypes(undefined);\r\n\t\t// Viene settato a true il booleano che indica se si sta attendendo la risposta del server, così da dare un feedback visivo all'utente\r\n\t\tsetEndpointLoading(true);\r\n\t\t// Richiesta Get all'url /get_types a cui viene passato come valore l'url dell'endpoint inserito dall'uente\r\n\t\tawait axios\r\n\t\t\t.get(`/get_types?endpoint=${endpointUrl}`)\r\n\t\t\t.then((response) => {\r\n\t\t\t\t//! log di debug\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t// Viene salvata la lista di rdf:type nello stato\r\n\t\t\t\tsetEndpointTypes(response.data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\t// In caso di errore nella risposta viene scritto nel log l'errore\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Errore nel caricamento dei tipi dell'endpoint:\" + error\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t// Viene settato a false il booleano di caricamento in quanto la risposta è stata ricevuta\r\n\t\tsetEndpointLoading(false);\r\n\t}\r\n\t/* Funzione asincrona che esegue una richiesta post al server per eseguire la query con i vincoli posti dall'utente */\r\n\tasync function query() {\r\n\t\t// Creazione di una lista contenente i soli uri delle proprietà\r\n\t\tconst attributes = resource.map((attribute) => attribute.property.uri);\r\n\t\tconsole.log(attributes); //! Log di debug\r\n\t\t// Chiamata all'api che salva l'ordine degli attributi inviando l'intera lista di attributi della risorsa\r\n\t\tconsole.log(resourceType);\r\n\t\tconst rdfType = resourceType ? resourceType?.type.value : \"\";\r\n\t\taxios\r\n\t\t\t.post(\"/save_order\", {\r\n\t\t\t\tattributes: attributes,\r\n\t\t\t\tendpoint: endpointUrl,\r\n\t\t\t\tresourceType: rdfType,\r\n\t\t\t})\r\n\t\t\t.then((response) => console.log(response))\r\n\t\t\t.catch((error) => console.log(error));\r\n\r\n\t\t// Viene settato il booleano che indica se vi è un caricamendo della pagina a true\r\n\t\tsetIsLoading(true);\r\n\t\t// Deep copy della risorsa\r\n\t\tconst resourceCopy = resource?.map((attribute) => {\r\n\t\t\treturn { ...attribute };\r\n\t\t});\r\n\t\t// Filter dei soli attributi che sono vincoli selezionati dall'utente\r\n\t\tconst constraints = resourceCopy.filter(\r\n\t\t\t({ ...attribute }) => attribute.isConstraint\r\n\t\t);\r\n\t\t// Map che per ogni attributo lascia solo i valori modificati dall'utente\r\n\t\tconstraints.map(\r\n\t\t\t(attribute) =>\r\n\t\t\t\t(attribute.value = attribute.value.filter(\r\n\t\t\t\t\t(value) => value.edited\r\n\t\t\t\t))\r\n\t\t);\r\n\t\tconsole.log(constraints); //! Log di debug\r\n\t\t// Se esiste una richiesta precedente ancora in elaborazione viene cancellata.\r\n\t\tif (request) {\r\n\t\t\tconsole.log(\"CANCELLATO\"); //!DEBUG\r\n\t\t\t// Viene cancellata la richiesta precedente\r\n\t\t\trequest.cancel(\"axios request cancelled\");\r\n\t\t\t// Viene settato a undefined lo stato che contiene la richiesta in quanto è stata cancellata\r\n\t\t\tsetRequest(undefined);\r\n\t\t}\r\n\t\t// Viene salvato il cancel token della richiesta axios\r\n\t\tconst axiosSource = axios.CancelToken.source();\r\n\t\t// Viene memorizzato nello stato apposito\r\n\t\tsetRequest(axiosSource);\r\n\t\t/* Post request al server, a cui viene passato:\r\n\t\t  L'url dell'endpoint selzionato dall'utente, la lingua selezionata per i risultati, la lista di vincoli e anche il cancelToken */\r\n\t\tawait axios\r\n\t\t\t.post(\r\n\t\t\t\t\"/query\",\r\n\t\t\t\t{\r\n\t\t\t\t\tendpointUrl: endpointUrl,\r\n\t\t\t\t\tlanguage: language,\r\n\t\t\t\t\tconstraints: constraints,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tcancelToken: axiosSource.token,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.data); //! Log di debug\r\n\t\t\t\t// Viene salvata la lista dei risultati della quer nello stato che contiene i risultati della query\r\n\t\t\t\tsetQueryResult(response.data);\r\n\t\t\t\t// Viene cancellata la richiesta dallo stato in quanto è stata completata\r\n\t\t\t\tsetRequest(undefined);\r\n\t\t\t\t// Viene spostata la visualizzazione alla tab results in cui vengono visualizzati i risultati della query\r\n\t\t\t\tsetSelectedTab(\"results\");\r\n\t\t\t\t// Viene impostata la visualizzazione al top della pagina\r\n\t\t\t\twindow.scrollTo(0, 0);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\t// Se vi è un errore nella risposta viene scritto nel log l'errore\r\n\t\t\t\tif (error.message === \"axios request cancelled\") {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"Nuova richiesta ricevuta, questa viene cancellata.\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"Errore nell'esecuzione della query.\", error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t// Viene impostato a false il booleano che indica se si è in attesa di una risposta dal server in quanto è stata ricevuta\r\n\t\tsetIsLoading(false);\r\n\t}\r\n\t/**Funzione asincrona che effettua la richiesta di una risorsa al server tramite una richiesta get a cui vengono passati i seguenti valori:\r\n\t * l'url dell'endpoint selezionato dall'utente, la lingua in cui ricevere i risultati e l'uri della risorsa che si sta chiedendo*/\r\n\tasync function getResource(uri) {\r\n\t\t// Viene settato a true il booleano che indica che si sta attendendo una risposta dal server\r\n\t\tsetIsLoading(true);\r\n\t\t// Viene settato a undefined lo stato che contiene la risorsa, il suo comment e il suo label per eliminare la precedente risorsa salvata\r\n\t\tsetResource(undefined);\r\n\t\tsetResourceLabel(undefined);\r\n\t\tsetResourceComment(undefined);\r\n\t\t// Richiesta get al server per ottenere la risorsa selezionata dall'utente\r\n\t\tawait axios\r\n\t\t\t.get(\r\n\t\t\t\t`/resource?endpoint=${endpointUrl}&language=${language}&uri=${uri}`\r\n\t\t\t)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response.data); //!Log di debug\r\n\t\t\t\t// Viene salvata nello stato apposito la risorsa richiesta\r\n\t\t\t\tsetResource(response.data.requestedResource);\r\n\t\t\t\t// Viene salvato nello apposito stato il label della risorsa\r\n\t\t\t\tsetResourceLabel(response.data.label);\r\n\t\t\t\t// Viene salvato nello apposito stato il comment della risorsa\r\n\t\t\t\tsetResourceComment(response.data.comment);\r\n\t\t\t\t// Viene spostata la visualizzazione alla tab resource in cui è possibile vedere la tabella della risorsa richiesta\r\n\t\t\t\tsetSelectedTab(\"resource\");\r\n\t\t\t\t// Viene spostata la visualizzazione al top della pagina\r\n\t\t\t\twindow.scrollTo(0, 0);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\t// In caso di errore nella risposta viene scritto nel log il messaggio di errore ricevuto\r\n\t\t\t\tconsole.log(\"Errore nella richiesta di una risorsa: \" + error);\r\n\t\t\t});\r\n\t\t// Viene settato a false il booleano che indica che si sta aspettando una risposta dal server in quanto è stata ricevuta\r\n\t\tsetIsLoading(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container fluid id=\"main-container\">\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div id=\"loading\">\r\n\t\t\t\t\t<img src={loadingImage} alt=\"Loading...\" />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<Header language={language} setLanguage={setLanguage} />\r\n\t\t\t<Tabs\r\n\t\t\t\tclassName=\"width-90-centered mt-1\"\r\n\t\t\t\tactiveKey={selectedTab}\r\n\t\t\t\tonSelect={(tab) => setSelectedTab(tab)}\r\n\t\t\t>\r\n\t\t\t\t<Tab eventKey=\"search\" title=\"Search\" className=\"tab\">\r\n\t\t\t\t\t<Row id=\"endpoint-form\">\r\n\t\t\t\t\t\t<EndpointSelection\r\n\t\t\t\t\t\t\tendpointUrl={endpointUrl}\r\n\t\t\t\t\t\t\tsetEndpointUrl={setEndpointUrl}\r\n\t\t\t\t\t\t\tgetEndpointTypes={getEndpointTypes}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<SearchForm\r\n\t\t\t\t\t\tlanguage={language}\r\n\t\t\t\t\t\tendpointUrl={endpointUrl}\r\n\t\t\t\t\t\tendpointTypes={endpointTypes}\r\n\t\t\t\t\t\tendpointLoading={endpointLoading}\r\n\t\t\t\t\t\tsetResourcesList={setResourcesList}\r\n\t\t\t\t\t\tgetResource={getResource}\r\n\t\t\t\t\t\tresourceType={resourceType}\r\n\t\t\t\t\t\tsetResourceType={setResourceType}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{resourcesList?.length > 0 && (\r\n\t\t\t\t\t\t<SearchResults\r\n\t\t\t\t\t\t\tresourcesList={resourcesList}\r\n\t\t\t\t\t\t\tlanguage={language}\r\n\t\t\t\t\t\t\tendpointUrl={endpointUrl}\r\n\t\t\t\t\t\t\tgetResource={getResource}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Tab>\r\n\t\t\t\t<Tab\r\n\t\t\t\t\teventKey=\"resource\"\r\n\t\t\t\t\ttitle=\"Resource\"\r\n\t\t\t\t\tclassName=\"tab\"\r\n\t\t\t\t\tdisabled={resource === undefined ? true : false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"width-90-centered mt-2\">\r\n\t\t\t\t\t\t<h3>{resourceLabel}</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{resourceComment ||\r\n\t\t\t\t\t\t\t\t\"No comment avaiable for this resource\"}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ResourceTable\r\n\t\t\t\t\t\tresource={resource}\r\n\t\t\t\t\t\tsetResource={setResource}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Container fluid id=\"footer\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tDopo aver modificato gli attributi per effettuare\r\n\t\t\t\t\t\t\tuna query clicca il tasto QUERY presente sulla\r\n\t\t\t\t\t\t\tdestra\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<Button variant=\"success\" size=\"lg\" onClick={query}>\r\n\t\t\t\t\t\t\tRun Query\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Tab>\r\n\t\t\t\t<Tab\r\n\t\t\t\t\teventKey=\"results\"\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\tqueryResult\r\n\t\t\t\t\t\t\t? `Query Results (${queryResult?.length})`\r\n\t\t\t\t\t\t\t: \"Query Results\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"tab\"\r\n\t\t\t\t\tdisabled={queryResult === undefined ? true : false}\r\n\t\t\t\t>\r\n\t\t\t\t\t{queryResult?.map((resource) => (\r\n\t\t\t\t\t\t<ResourcePreview\r\n\t\t\t\t\t\t\tkey={resource.ID}\r\n\t\t\t\t\t\t\tresource={resource}\r\n\t\t\t\t\t\t\tgetResource={getResource}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Tab>\r\n\t\t\t</Tabs>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport Home from \"./home/Home\";\r\nimport ResourcePage from \"./resource/ResourcePage\";\r\nimport SinglePage from \"./singlePageApp/SinglePage\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<SinglePage />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}